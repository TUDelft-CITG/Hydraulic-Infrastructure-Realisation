# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = openclsim
author="Mark van Koningsveld",
author_email="m.vankoningsveld@tudelft.nl",
summary =The OpenCLSim package aims to facilitate rule based planning of cyclic activities and in depth comparison of different system concepts.
keywords =OpenCLSim
license = MIT
home-page = https://github.com/TUDelft-CITG/openclsim
description-file = README.md
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

install_requires =
    importlib-metadata; python_version<"3.8"
    pandas>=0.24.0
    numpy
    simpy
    shapely
    pyproj
    nose
    plotly
    matplotlib
    networkx

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install openclsim[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    flake8==4.0.0
	coverage-badge
    faker
    lxml
    mock
    mypy
    openpyxl
    plotly
    pylama
    pylama_pylint
    black
    pytest
    pytest-black
    pytest-cov
    flake8<5
    pytest-flake8
    pytest-isort
    pytest-logging
    pytest-mypy
    pytest-runner
    pytest-mock
    pytest-datadir
    pytest-timeout
    pytest-split
    ipywidgets==7.6.5
    notebook==6.4.12
    jupyter==1.0.0
    jupyter-book==0.13.1
    simplekml
docs =
    sphinx>=1.8.0
    sphinx_rtd_theme

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = openclsim.module:function
# For example:
# console_scripts =
#     fibonacci = openclsim.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[mypy]
ignore_missing_imports = True

[mypy-openclsim]
allow_untyped_defs = True

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 120
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pytest]
# py.test options when running `pytest`
addopts = tests src
    --cov --cov-report term --cov-report html
    --black
    --isort
    --flake8
    -W default

[tool:isort]
known_first_party=
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts = tests src
    --cov --cov-report term --cov-report html
    --black
    --isort
    --flake8
    -W default
norecursedirs =
    dist
    build
    .tox
testpaths = tests src
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[aliases]
docs = build_sphinx
test = pytest

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[pbr]
# Let pbr run sphinx-apidoc
autodoc_tree_index_modules = True
# autodoc_tree_excludes = ...
# Let pbr itself generate the apidoc
# autodoc_index_modules = True
# autodoc_exclude_modules = ...
# Convert warnings to errors
# warnerrors = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.1
package = openclsim
